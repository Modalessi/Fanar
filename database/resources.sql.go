// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: resources.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const createResource = `-- name: CreateResource :one
INSERT INTO resources (course_id, title, description, file_ext, s3_url, tags, created_by) VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING id, course_id, title, description, file_ext, s3_url, tags, created_by, created_at, updated_at
`

type CreateResourceParams struct {
	CourseID    uuid.UUID
	Title       string
	Description string
	FileExt     string
	S3Url       string
	Tags        []string
	CreatedBy   uuid.UUID
}

func (q *Queries) CreateResource(ctx context.Context, arg CreateResourceParams) (Resource, error) {
	row := q.db.QueryRowContext(ctx, createResource,
		arg.CourseID,
		arg.Title,
		arg.Description,
		arg.FileExt,
		arg.S3Url,
		pq.Array(arg.Tags),
		arg.CreatedBy,
	)
	var i Resource
	err := row.Scan(
		&i.ID,
		&i.CourseID,
		&i.Title,
		&i.Description,
		&i.FileExt,
		&i.S3Url,
		pq.Array(&i.Tags),
		&i.CreatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteResourceByID = `-- name: DeleteResourceByID :one
DELETE FROM resources WHERE id = $1 RETURNING id, course_id, title, description, file_ext, s3_url, tags, created_by, created_at, updated_at
`

func (q *Queries) DeleteResourceByID(ctx context.Context, id uuid.UUID) (Resource, error) {
	row := q.db.QueryRowContext(ctx, deleteResourceByID, id)
	var i Resource
	err := row.Scan(
		&i.ID,
		&i.CourseID,
		&i.Title,
		&i.Description,
		&i.FileExt,
		&i.S3Url,
		pq.Array(&i.Tags),
		&i.CreatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getResourceByID = `-- name: GetResourceByID :one
SELECT id, course_id, title, description, file_ext, s3_url, tags, created_by, created_at, updated_at FROM resources WHERE id = $1
`

func (q *Queries) GetResourceByID(ctx context.Context, id uuid.UUID) (Resource, error) {
	row := q.db.QueryRowContext(ctx, getResourceByID, id)
	var i Resource
	err := row.Scan(
		&i.ID,
		&i.CourseID,
		&i.Title,
		&i.Description,
		&i.FileExt,
		&i.S3Url,
		pq.Array(&i.Tags),
		&i.CreatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
