// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: courses.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createCourse = `-- name: CreateCourse :one
INSERT INTO courses (title, description, course_code, credit_hours, contact_hours) VALUES ($1, $2, $3, $4, $5) RETURNING id, title, description, course_code, credit_hours, contact_hours, created_at, updated_at
`

type CreateCourseParams struct {
	Title        string
	Description  string
	CourseCode   string
	CreditHours  int32
	ContactHours int32
}

func (q *Queries) CreateCourse(ctx context.Context, arg CreateCourseParams) (Course, error) {
	row := q.db.QueryRowContext(ctx, createCourse,
		arg.Title,
		arg.Description,
		arg.CourseCode,
		arg.CreditHours,
		arg.ContactHours,
	)
	var i Course
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Description,
		&i.CourseCode,
		&i.CreditHours,
		&i.ContactHours,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getCourseByID = `-- name: GetCourseByID :one
SELECT id, title, description, course_code, credit_hours, contact_hours, created_at, updated_at FROM courses WHERE id = $1
`

func (q *Queries) GetCourseByID(ctx context.Context, id uuid.UUID) (Course, error) {
	row := q.db.QueryRowContext(ctx, getCourseByID, id)
	var i Course
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Description,
		&i.CourseCode,
		&i.CreditHours,
		&i.ContactHours,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateCourseDescription = `-- name: UpdateCourseDescription :one
UPDATE courses SET description = $1 WHERE id = $2 RETURNING id, title, description, course_code, credit_hours, contact_hours, created_at, updated_at
`

type UpdateCourseDescriptionParams struct {
	Description string
	ID          uuid.UUID
}

func (q *Queries) UpdateCourseDescription(ctx context.Context, arg UpdateCourseDescriptionParams) (Course, error) {
	row := q.db.QueryRowContext(ctx, updateCourseDescription, arg.Description, arg.ID)
	var i Course
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Description,
		&i.CourseCode,
		&i.CreditHours,
		&i.ContactHours,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
